{
	"commands": [
		{
			"id": 1,
			"name": "Друк",
			"execute": "print",
			"example": "Друк('Привіт! Це моя перша програма.');",
			"question": "Друк('Ви готові розпочати?');"
		},
		{
			"id": 2,
			"name": "Змінна",
			"execute": "var",
			"example": "Змінна назва = 'Ніка';\n\nДрук('Мене звати: ' + назва);",
			"question": "Змінна вік = 12;\n\nДрук('мені ' + вік + ' років');"
		},
		{
			"id": 3,
			"name": "Константа",
			"execute": "const",
			"example": "Константа днівУТижні = 7;\n\nДрук('Скільки днів у тижні? : ' + днівУТижні);",
			"question": "Константа рік = 2025;\n\nДрук('24 травня ' + рік);"
		},
		{
			"id": 4,
			"name": "Тип",
			"execute": "typeof",
			"example": "Змінна вік = 25;\n\nДрук('Типом буде: ' + Тип(вік));",
			"question": "Змінна імя = 'Іван';\n\nДрук('Типом буде: ' + Тип(імя));"			
		},
		{
			"id": 5,
			"name": "ЦілеЧисло",
			"execute": "parseInt",
			"example": "Друк('Цілим числом буде: ' + ЦілеЧисло('42.6'));",
			"question": "Друк('Цілим числом буде: ' + ЦілеЧисло('21.65'));"
		},
		{
			"id": 6,
			"name": "Число",
			"execute": "parseFloat",
			"example": "Друк('Числовий вигляд: ' + Число('3.14'));",
			"question": "Друк('Числовий вигляд: ' + Число('2.1'));"
		},
		{
			"id": 7,
			"name": "Дата",
			"execute": "new Date",
			"example": "Друк('Сьогоднішня дата: ' + Дата());",
			"question": "//У полі для виведення, після запуску коду, зʼявиться числа, а саме сьогоднішня дата? Дайте відповідь: Вірно/НеВірно. \nДрук(Number.isInteger(Дата()));"
		},
		{
			"id": 8,
			"name": "Зараз",
			"execute": "Date.now",
			"example": "Друк('Час зараз: ' + Зараз());",
			"question": "Друк('Часи будуть однакові: ' + (Зараз() == Зараз()));"
		},
		{
			"id": 9,
			"name": "Функція",
			"execute": "function",
			"example": "Функція привітання(імя) {\n  Друк('Привіт, ' + імя + '!');\n}\n\nпривітання('Ніка');",
			"question": "Функція показатиПодвоєне(число) {\n   Друк(число * 2);/n }\n\n  показатиПодвоєне(5);"
		},
		{
			"id": 10,
			"name": "Якщо",
			"execute": "if",
			"example": "Якщо (5 > 4) {\n  Друк('Це працює!');\n}",
			"question": "Якщо (8 < 10) {\n  Друк('Це також працює!');\n}"
		},
		{
			"id": 11,
			"name": "Інакше",
			"execute": "else",
			"example": "Змінна накопичення = 26;\nЯкщо (накопичення>20)\n{  Друк('Ви можете купити хліб');}\n Інакше {  Друк('Ви не можете купити хліб');\n}",
			"question": "Змінна оцінка = 75;\n  Якщо (оцінка > 60)\n {     Друк('Ви склали тест'); }\n Інакше {     Друк('Ви не склали тест');\n }"
		},
		{
			"id": 12,
			"name": "ІнакшеЯкщо",
			"execute": "else if",
			"example": "Якщо (2 + 2 == 4 ТА 8 - 5 == 3) {\n  Друк('Обидві умови істинні');\n} ІнакшеЯкщо (2 + 2 == 5 АБО 8 - 5 == 3) {\n  Друк('Одна з умов істинна');\n}",
			"question": "вік = 16\n Якщо (вік >= 18) {\n  друк('Ви можете отримати водійські права.');\n} Інакше {\n  друк('Ви ще не досягнули потрібного віку.');\n}"
		},
		{
			"id": 13,
			"name": "Поверни",
			"execute": "return",
			"example": "Друк('Цей рядок не виконається');\n\nЯкщо (10 > 5) {\n  Поверни 'Готово';\n}\n\nДрук('Цей рядок не виконається');",
			"question": "Якщо (32 + 7 < 28 + 14) {\n  Поверни 'Завершено';\n}\n\nДрук('Цей рядок виконається');"
		},
		{
			"id": 14,
			"name": "Поки",
			"execute": "while",
			"example": "Функція рахувати(лічильник) {\n  Поки (лічильник > 0) {\n    Друк('Лічильник: ' + лічильник);\n    лічильник--;\n  }\n}\nрахувати(5);",
			"question": "Функція рахувати(лічильник) {\n  Поки (лічильник > 0) {\n    Друк('Лічильник: ' + лічильник);\n\n    лічильник--;\n  }\n}\n\nрахувати(3);"
		},
		{
			"id": 15,
			"name": "Для",
			"execute": "for",
			"example": "Для (Змінна i = 0; i < 5; i++) {\n  Друк('Крок ' + i);\n}",
			"question": "Для (Змінна a = 3; a < 21; a++) {\n  Друк('Крок ' + a);\n}"
		},
		{
			"id": 16,
			"name": "Перервати",
			"execute": "break",
			"example": "Для (Змінна i = 0; i < 5; i++) {\n  Якщо (i == 3) {\n    Перервати;\n  }\n\n   Друк('i має значення ' + i);\n}",
			"question": "Для (Змінна d = 0; d < 7; d++) {\n  Якщо (d == 4) {\n    Перервати;\n  }\n\n  Друк('d має значення ' + d);\n}"
		},
		{
			"id": 17,
			"name": "Пропустити",
			"execute": "continue",
			"example": "Для (Змінна i = 0; i < 5; i++) {\n  Якщо (i == 2) {\n    Пропустити;\n  }\n\n  Друк('Крок: ' + i);\n}",
			"question": "Для (Змінна e = 0; e < 3; e++) {\n  Якщо (e == 2) {\n    Пропустити;\n  }\n\n  Друк('Крок: ' + e);\n}"
		},
		{
			"id": 18,
			"name": "Попередження",
			"execute": "alert",
			"example": "Попередження('Привіт, це повідомлення для тебе!');",
			"question": "//У полі для виведення, після запуску коду, зʼявиться якийсь текст? Дайте відповідь: ВІРНО/НЕВІРНО.\nПопередження('Повідомлення з текстом');"
		},
		{
			"id": 19,
			"name": "ВипадковеЧисло",
			"execute": "Math.random",
			"example": "Змінна випадкове = ВипадковеЧисло();\nДрук('Випадкове число: ' + випадкове);",
			"question": "//Випадкове число буде більше за 1? Дайте відповідь ВІРНО/НЕВІРНО.\nДрук(ВипадковеЧисло() > 1);"
		},
		{
			"id": 20,
			"name": "Округлити",
			"execute": "Math.round",
			"example": "Друк('Округлене число 4.6 буде мати значення: ' + Округлити(4.6));",
			"question": "Друк('Округлене число 13.2 буде мати значення: ' + Округлити(13.2));"
		},
		{
			"id": 21,
			"name": "ДоМеньшогоЦілого",
			"execute": "Math.floor",
			"example": "Друк('До меньшого цілого 17.4: ' + ДоМеньшогоЦілого(17.4));",
			"question": "Друк('До меньшого цілого 4.7: ' + ДоМеньшогоЦілого(4.7));"
		},
		{
			"id": 22,
			"name": "ДоБільшогоЦілого",
			"execute": "Math.ceil",
			"example": "Друк('До більшого цілого 4.1: ' + ДоБільшогоЦілого(4.1));",
			"question": "Друк('До більшого цілого 10.6: ' + ДоБільшогоЦілого(10.6));"
		},
		{
			"id": 23,
			"name": "Мінімум",
			"execute": "Math.min",
			"example": "Друк('Меншим числом з 3 і 8.4 буде: ' + Мінімум(3, 8.4));",
			"question": "Друк('Мінімум з 15 і 9: ' + Мінімум(15, 9));"
		},
		{
			"id": 24,
			"name": "Максимум",
			"execute": "Math.max",
			"example": "Друк('Максимум з 3 і 8.4: ' + Максимум(3, 8.4));",
			"question": "Друк('Максимум з 15 і 9: ' + Максимум(15, 9));"
		},
		{
			"id": 25,
			"name": "Корінь",
			"execute": "Math.sqrt",
			"example": "Друк('Коренем з 144 буде: ' + Корінь(144));",
			"question": "Друк('Коренем з 49 буде: ' + Корінь(49));"
		},
		{
			"id": 26,
			"name": "Степінь",
			"execute": "Math.pow",
			"example": "Друк('2 в степені 3: ' + Степінь(2, 3));",
			"question": "Друк('8 в степені 2: ' + Степінь(8, 2));"
		},		
		{
			"id": 27,
			"name": "Довжина",
			"execute": "length",
			"example": "Змінна текст = 'Привіт! Як справи?';\n\nДрук('Кількість символів в тексті: ' + текст.Довжина);",
			"question": "Змінна текст = 'Сьогодні сонячна погода';\n\nДрук('Кількість символів в тексті: ' + текст.Довжина);"
		},
		{
			"id": 28,
			"name": "Індекс",
			"execute": "indexOf",
			"example": "Змінна текст = 'Привіт, світе!';\n\nДрук('Індекс слова: ' + текст.Індекс('світе'));",
			"question": "Змінна текст = 'Мене звати Іван';\n\nДрук('Індекс слова: ' + текст.Індекс('Іван'));"
		},
		{
			"id": 29,
			"name": "Замінити",
			"execute": "replace",
			"example": "Змінна текст = 'Привіт, світе!';\n\nДрук(текст.Замінити('світе', 'друже'));",
			"question": "Змінна текст = 'Мене звати Іван';\n\nДрук(текст.Замінити('Іван', 'Оля'));"
		},
		{
			"id": 30,
			"name": "Обєднати",
			"execute": "concat",
			"example": "Змінна а = 'Привіт';\nЗмінна б = 'Світ';\n\nДрук(а.Обєднати(' ', б));",
			"question": "Змінна а = 'Мене звати';\nЗмінна б = 'Оля';\n\nДрук(а.Обєднати(' ', б));"
		},
		{
			"id": 31,
			"name": "Великими",
			"execute": "toUpperCase",
			"example": "Змінна імя = 'Оля';\n\nДрук('Великим регістром: ' + імя.Великими());",
			"question": "Змінна абревіатура = 'флкас';\n\nДрук('Великим регістром: ' + абревіатура.Великими());"
		},
		{
			"id": 32,
			"name": "Малими",
			"execute": "toLowerCase",
			"example": "Змінна імя = 'Оля';\n\nДрук('Малим регістром: ' + імя.Малими());",
			"question": "Змінна імя = 'Іван';\n\nДрук('Малим регістром: ' + імя.Малими());"
		},
		{
			"id": 33,
			"name": "Масив",
			"execute": "[]",
			"example": "Змінна список = Масив;\n\nДрук('Довжина Масива: ' + список.Довжина);",
			"question": "Змінна список = Масив;\n\nДрук('Довжина Масива: ' + список.Довжина);"
		},
		{
			"id": 34,
			"name": "ЧиМасив",
			"execute": "Array.isArray",
			"example": "Змінна список = Масив;\n\nДрук('Це масив? ' + ЧиМасив(список));",
			"question": "Змінна текст = 'Привіт';\n\nДрук('Це масив? ' + ЧиМасив(текст));"
		},
		{
			"id": 35,
			"name": "Додати",
			"execute": "push",
			"example": "Змінна список = Масив;\n\nсписок.Додати('яблуко');\n\nсписок.Додати('банан');\n\nДрук('Масив: ' + список);\n\nДрук('Після видалення: ' + список);\n\nДрук('Довжина Масива: ' + список.Довжина);",
			"question": "Змінна список = Масив;\n\nсписок.Додати('хліб');\n\nсписок.Додати('молоко');\n\nДрук('Масив: ' + список);\n\nДрук('Після видалення: ' + список);\n\nДрук('Довжина Масива: ' + список.Довжина);"
		},
		{   "id": 36,
			"name": "Фільтрувати",
			"execute": "filter",
			"example": "Змінна числа = [1, 2, 3, 4, 5];\nЗмінна парні = числа.Фільтрувати((н) => н % 2 === 0);\n\nДрук(парні);",
			"question": "Змінна числа = [6, 7, 8, 9];\nЗмінна парні = числа.Фільтрувати((н) => н % 2 === 0);\n\nДрук(парні);"
		},
		{	"id": 37,
			"name": "Мапувати",
			"execute": "map",
			"example": "Змінна числа = [1, 2, 3];\nчисла = числа.Мапувати((н) => н * 2);\n\nДрук(числа);",
			"question": "Змінна числа = [4, 5];\nчисла = числа.Мапувати((н) => н * 2);\n\nДрук(числа);"
		},
		{
			"id": 38,
			"name": "ВидалитиОстанній",
			"execute": "pop",
			"example": "Змінна список = Масив;\n\nсписок.Додати('яблуко');\n\nсписок.Додати('банан');\n\nДрук('Масив: ' + список);\n\nсписок.ВидалитиОстанній();\n\nДрук('Після видалення: ' + список.Довжина);\n\nДрук('Довжина Масива: ' + список.Довжина);",
			"question": "Змінна список = Масив;\n\nсписок.Додати('хліб');\n\nсписок.Додати('молоко');\n\nДрук('Масив: ' + список);\n\nсписок.ВидалитиОстанній();\n\nДрук('Після видалення: ' + список.Довжина);\n\nДрук('Довжина Масива: ' + список.Довжина);"
		},
		{
			"id": 39,
			"name": "Обєкт",
			"execute": "{}",
			"example": "Змінна учень = Обєкт;\n\nучень.імя = 'Оля';\n\nучень.вік = 10;\n\nДрук('Обєкт: ' + учень);",
			"question": "Змінна фрукт = Обєкт;\n\nфрукт.назва = 'яблуко';\n\nучень.колір = зелений;\n\nДрук('Обєкт: ' + фрукт);"
		},
		{
			"id": 40,
			"name": "Ключі",
			"execute": "Object.keys",
			"example": "Змінна учень = Обєкт;\n\nучень.імя = 'Оля';\n\nучень.вік = 10;\n\nДрук('Ключі: ' + Ключі(учень));;",
			"question": "Змінна фрукт = Обєкт;\n\nфрукт.назва = 'банан';\n\nфрукт.колір = жовтий;\n\nДрук('Ключі: ' + Ключі(фрукт));;"
		},
		{
			"id": 41,
			"name": "Значення",
			"execute": "Object.values",
			"example": "Змінна учень = Обєкт;\n\nучень.імя = 'Оля';\n\nучень.вік = 10;\n\nДрук('Значення: ' + Значення(учень));",
			"question": "Змінна фрукт = Обєкт;\n\nфрукт.назва = 'слива';\n\nфрукт.колір = фіолетовий;\n\nДрук('Значення: ' + Значення(фрукт));"
		},
		{
			"id": 42,
			"name": "Пари",
			"execute": "Object.entries",
			"example": "Змінна учень = Обєкт;\n\nучень.імя = 'Оля';\n\nучень.вік = 10;\n\nДрук('Пари: ' + Пари(учень));",
			"question": "Змінна меблі = Обєкт;\n\nмеблі.назва = 'стіл';\n\nмеблі.матеріал = деревина;\n\nДрук('Пари: ' + Пари(меблі));"
		},
		{
			"id": 43,
			"name": "ЄКлюч",
			"execute": "in",
			"example": "Змінна дані = Обєкт;\n\nдані.місто = 'Київ';\n\nЯкщо ('місто' ЄКлюч дані) {\n  Друк('Місто знайдено: ' + дані.місто);\n}",
			"question": "Змінна особа = Обєкт;\n\nособа.національність = 'українець';\n\nЯкщо ('національність' ЄКлюч особа) {\n  Друк('Особа знайдено: ' + особа.національність);\n}"
		},
		{
			"id": 44,
			"name": "Видалити",
			"execute": "delete",
			"example": "Змінна дані = Обєкт;\n\nдані.місто = 'Київ';\n\nВидалити дані.місто;\n\nДрук('Після видалення: ' + дані.місто);",
			"question": "Змінна особа = Обєкт;\n\nособа.стать = 'жінка';\n\nВидалити особа.стать;\n\nДрук('Після видалення: ' , особа.місто);"
		}
	]
}
