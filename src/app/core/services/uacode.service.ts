import { Injectable } from '@angular/core';

@Injectable({
	providedIn: 'root',
})
export class UacodeService {

	constructor() {
	}

	getExample(id: number): string {
		const command = this.commands.find(cmd => cmd.id === id);
		return command ? command.example : ' ';
	}

	commands = [
		{
			id: 1, name: "Друк", execute: "print", example: `Друк('Світ');
	  
	  Якщо (true) {
		Друк('Це працює!');
	  }
	  
	  Функція привітання(імя) {
		Друк('Привіт, ' + імя + '!');
	  }
	  
	  привітання('Ніка');
	  
	  Функція рахувати(лічильник) {
		Поки (лічильник > 0) {
		  Друк('Лічильник: ' + лічильник);
		  лічильник--;
		}
	  }
	  
	  рахувати(5);
	  
	  Змінна назва = 'Ніка';
	  
	  Друк('Мене звати: ' + назва);
	  
	  константа рік = 2024;
	  
	  Друк('Цей рік: ' + рік);
	  
	  Для (Змінна i = 0; i < 5; i++) {
		Друк('Крок ' + i);
	  }
	  
	  Якщо (true та true) {
		Друк('Обидві умови істинні');
	  } Інакше якщо (false або true) {
		Друк('Одна з умов істинна');
	  } Інакше {
		Друк('Усі умови хибні');
	  }
	  
	  Для (Змінна i = 0; i < 5; i++) {
		Якщо (i === 3) {
		  Зупинити;
		}
		Друк('i: ' + i);
	  }
	  
	  Для (Змінна i = 0; i < 5; i++) {
		Якщо (i === 2) {
		  Пропустити;
		}
		Друк('Крок: ' + i);
	  }
	  
	  Змінна випадкове = ВипадковеЧисло();
	  
	  Друк('Випадкове число: ' + випадкове);
	  
	  Змінна сьогодні = Нова Дата();
	  
	  Друк('Сьогоднішня дата: ' + сьогодні);
	  
	  Друк('Час зараз: ' + Зараз());
	  
	  Друк('Округлити 4.6: ' + Округлити(4.6));
	  
	  Друк('Підлога 4.9: ' + Підлога(4.9));
	  
	  Друк('Стеля 4.1: ' + Стеля(4.1));
	  
	  Друк('Мінімум з 3 і 8: ' + Мінімум(3, 8));
	  
	  Друк('Максимум з 3 і 8: ' + Максимум(3, 8));
	  
	  Змінна корінь = Корінь(25);
	  
	  Друк('Корінь з 25: ' + корінь);
	  
	  Друк('2 в степені 3: ' + Степінь(2, 3));
	  
	  Змінна текст = 'Привіт';
	  
	  Друк('Довжина: ' + текст.Довжина);
	  
	  Змінна імя = 'оля';
	  
	  Друк('Великими: ' + імя.Великими());
	  
	  Друк('Малими: ' + імя.Малими());
	  
	  Змінна рядок1 = '42';
	  
	  Змінна рядок2 = '3.14';
	  
	  Друк('parseInt: ' + ЦілеЧисло(рядок1));
	  
	  Друк('parseFloat: ' + Число(рядок2));
	  
	  Змінна список = Масив;
	  
	  список.Додати('яблуко');
	  список.Додати('банан');
	  Друк('Масив: ' + список);
	  список.ВидалитиОстанній();
	  
	  Друк('Після видалення: ' + список);
	  
	  Змінна учень = Обєкт;
	  
	  учень.імя = 'Оля';
	  учень.вік = 10;
	  
	  Друк('Ключі: ' + Ключі(учень));
	  Друк('Значення: ' + Значення(учень));
	  Друк('Пари: ' + Пари(учень));
	  
	  Змінна дані = Обєкт;
	  
	  дані.місто = 'Київ';
	  
	  Якщо ('місто' ЄКлюч дані) {
		Друк('Місто знайдено: ' + дані.місто);
	  }
	  
	  Видалити дані.місто;
	  
	  Друк('Після видалення: ' + дані);` },
		{
			id: 2, name: "Якщо", execute: "if", example: `Якщо (true) {
		Друк('Це працює!');
	  }
	  
	  Якщо (true та true) {
		Друк('Обидві умови істинні');
	  } Інакше якщо (false або true) {
		Друк('Одна з умов істинна');
	  } Інакше {
		Друк('Усі умови хибні');
	  }
	  
	  Для (Змінна i = 0; i < 5; i++) {
		Якщо (i === 3) {
		  Зупинити;
		}
		Друк('i: ' + i);
	  }
	  
	  Для (Змінна i = 0; i < 5; i++) {
		Якщо (i === 2) {
		  Пропустити;
		}
		Друк('Крок: ' + i);
	  }
	  
	  Змінна дані = Обєкт;
	  
	  дані.місто = 'Київ';
	  
	  Якщо ('місто' ЄКлюч дані) {
		Друк('Місто знайдено: ' + дані.місто);
	  }
	  
	  Видалити дані.місто;
	  
	  Друк('Після видалення: ' + дані);` },
		{
			id: 3, name: "Функція", execute: "function", example: `Функція привітання(імя) {
		Друк('Привіт, ' + імя + '!');
	  }
	  
	  привітання('Ніка');
	  
	  Функція рахувати(лічильник) {
		Поки (лічильник > 0) {
		  Друк('Лічильник: ' + лічильник);
		  лічильник--;
		}
	  }
	  
	  рахувати(5);` },
		{
			id: 4, name: "Поки", execute: "while", example: `Функція рахувати(лічильник) {
		Поки (лічильник > 0) {
		  Друк('Лічильник: ' + лічильник);
		  лічильник--;
		}
	  }
	  
	  рахувати(5);` },
		{
			id: 5, name: "Змінна", execute: "var", example: `Змінна назва = 'Ніка';
	  
	  Друк('Мене звати: ' + назва);
	  
	  Для (Змінна i = 0; i < 5; i++) {
		Друк('Крок ' + i);
	  }
	  
	  Для (Змінна i = 0; i < 5; i++) {
		Якщо (i === 3) {
		  Зупинити;
		}
		Друк('i: ' + i);
	  }
	  
	  Для (Змінна i = 0; i < 5; i++) {
		Якщо (i === 2) {
		  Пропустити;
		}
		Друк('Крок: ' + i);
	  }
	  
	  Змінна випадкове = ВипадковеЧисло();
	  
	  Друк('Випадкове число: ' + випадкове);
	  
	  Змінна сьогодні = Нова Дата();
	  
	  Друк('Сьогоднішня дата: ' + сьогодні);
	  
	  Змінна корінь = Корінь(25);
	  
	  Друк('Корінь з 25: ' + корінь);
	  
	  Змінна текст = 'Привіт';
	  
	  Друк('Довжина: ' + текст.Довжина);
	  
	  Змінна імя = 'оля';
	  
	  Друк('Великими: ' + імя.Великими());
	  
	  Друк('Малими: ' + імя.Малими());
	  
	  Змінна рядок1 = '42';
	  
	  Змінна рядок2 = '3.14';
	  
	  Друк('parseInt: ' + ЦілеЧисло(рядок1));
	  
	  Друк('parseFloat: ' + Число(рядок2));
	  
	  Змінна список = Масив;
	  
	  список.Додати('яблуко');
	  список.Додати('банан');
	  Друк('Масив: ' + список);
	  список.ВидалитиОстанній();
	  
	  Друк('Після видалення: ' + список);
	  
	  Змінна учень = Обєкт;
	  
	  учень.імя = 'Оля';
	  учень.вік = 10;
	  
	  Друк('Ключі: ' + Ключі(учень));
	  Друк('Значення: ' + Значення(учень));
	  Друк('Пари: ' + Пари(учень));
	  
	  Змінна дані = Обєкт;
	  
	  дані.місто = 'Київ';
	  
	  Якщо ('місто' ЄКлюч дані) {
		Друк('Місто знайдено: ' + дані.місто);
	  }
	  
	  Видалити дані.місто;
	  
	  Друк('Після видалення: ' + дані);` },
		{
			id: 6, name: "Для", execute: "for", example: `Для (Змінна i = 0; i < 5; i++) {
		Друк('Крок ' + i);
	  }
	  
	  Для (Змінна i = 0; i < 5; i++) {
		Якщо (i === 3) {
		  Зупинити;
		}
		Друк('i: ' + i);
	  }
	  
	  Для (Змінна i = 0; i < 5; i++) {
		Якщо (i === 2) {
		  Пропустити;
		}
		Друк('Крок: ' + i);
	  }` },
		{
			id: 7, name: "Інакше якщо", execute: "else if", example: `Якщо (true та true) {
		Друк('Обидві умови істинні');
	  } Інакше якщо (false або true) {
		Друк('Одна з умов істинна');
	  } Інакше {
		Друк('Усі умови хибні');
	  }` },
		{
			id: 8, name: "Інакше", execute: "else", example: `Якщо (true та true) {
		Друк('Обидві умови істинні');
	  } Інакше якщо (false або true) {
		Друк('Одна з умов істинна');
	  } Інакше {
		Друк('Усі умови хибні');
	  }` },
		{
			id: 9, name: "Зупинити", execute: "break", example: `Для (Змінна i = 0; i < 5; i++) {
		Якщо (i === 3) {
		  Зупинити;
		}
		Друк('i: ' + i);
	  }` },
		{
			id: 10, name: "Пропустити", execute: "continue", example: `Для (Змінна i = 0; i < 5; i++) {
		Якщо (i === 2) {
		  Пропустити;
		}
		Друк('Крок: ' + i);
	  }` },
		{ id: 11, name: "Попередження", execute: "alert", example: `Попередження('Привіт, це повідомлення для тебе!');` },
		{
			id: 12, name: "ВипадковеЧисло", execute: "Math.random", example: `Змінна випадкове = ВипадковеЧисло();
	  
	  Друк('Випадкове число: ' + випадкове);` },
		{
			id: 13, name: "Дата", execute: "Date", example: `Змінна сьогодні = Нова Дата();
	  
	  Друк('Сьогоднішня дата: ' + сьогодні);` },
		{ id: 14, name: "Зараз", execute: "Date.now", example: `Друк('Час зараз: ' + Зараз());` },
		{
			id: 15, name: "Округлити", execute: "Math.round", example: `Друк('Округлити 4.6: ' + Округлити(4.6));
	  
	  Друк('Підлога 4.9: ' + Підлога(4.9));
	  
	  Друк('Стеля 4.1: ' + Стеля(4.1));` },
		{
			id: 16, name: "Підлога", execute: "Math.floor", example: `Друк('Округлити 4.6: ' + Округлити(4.6));
	  
	  Друк('Підлога 4.9: ' + Підлога(4.9));
	  
	  Друк('Стеля 4.1: ' + Стеля(4.1));` },
		{
			id: 17, name: "Стеля", execute: "Math.ceil", example: `Друк('Округлити 4.6: ' + Округлити(4.6));
	  
	  Друк('Підлога 4.9: ' + Підлога(4.9));
	  
	  Друк('Стеля 4.1: ' + Стеля(4.1));` },
		{
			id: 18, name: "Мінімум", execute: "Math.min", example: `Друк('Мінімум з 3 і 8: ' + Мінімум(3, 8));
	  
	  Друк('Максимум з 3 і 8: ' + Максимум(3, 8));` },
		{
			id: 19, name: "Максимум", execute: "Math.max", example: `Друк('Мінімум з 3 і 8: ' + Мінімум(3, 8));
	  
	  Друк('Максимум з 3 і 8: ' + Максимум(3, 8));` },
		{
			id: 20, name: "Корінь", execute: "Math.sqrt", example: `Змінна корінь = Корінь(25);
	  
	  Друк('Корінь з 25: ' + корінь);` },
		{ id: 21, name: "Степінь", execute: "Math.pow", example: `Друк('2 в степені 3: ' + Степінь(2, 3));` },
		{
			id: 22, name: "Довжина", execute: "length", example: `Змінна текст = 'Привіт';
	  
	  Друк('Довжина: ' + текст.Довжина);` },
		{
			id: 23, name: "Великими", execute: "toUpperCase", example: `Змінна імя = 'оля';
	  
	  Друк('Великими: ' + імя.Великими());
	  
	  Друк('Малими: ' + імя.Малими());` },
		{
			id: 24, name: "Малими", execute: "toLowerCase", example: `Змінна імя = 'оля';
	  
	  Друк('Великими: ' + імя.Великими());
	  
	  Друк('Малими: ' + імя.Малими());` },
		{
			id: 25, name: "ЦілеЧисло", execute: "parseInt", example: `Змінна рядок1 = '42';
	  
	  Змінна рядок2 = '3.14';
	  
	  Друк('parseInt: ' + ЦілеЧисло(рядок1));
	  
	  Друк('parseFloat: ' + Число(рядок2));` },
		{
			id: 26, name: "Число", execute: "parseFloat", example: `Змінна рядок1 = '42';
	  
	  Змінна рядок2 = '3.14';
	  
	  Друк('parseInt: ' + ЦілеЧисло(рядок1));
	  
	  Друк('parseFloat: ' + Число(рядок2));` },
		{
			id: 27, name: "Масив", execute: "[]", example: `Змінна список = Масив;
	  
	  список.Додати('яблуко');
	  список.Додати('банан');
	  Друк('Масив: ' + список);
	  список.ВидалитиОстанній();
	  
	  Друк('Після видалення: ' + список);` },
		{
			id: 28, name: "Додати", execute: "push", example: `Змінна список = Масив;
	  
	  список.Додати('яблуко');
	  список.Додати('банан');
	  Друк('Масив: ' + список);
	  список.ВидалитиОстанній();
	  
	  Друк('Після видалення: ' + список);` },
		{
			id: 29, name: "ВидалитиОстанній", execute: "pop", example: `Змінна список = Масив;
	  
	  список.Додати('яблуко');
	  список.Додати('банан');
	  Друк('Масив: ' + список);
	  список.ВидалитиОстанній();
	  
	  Друк('Після видалення: ' + список);` },
		{
			id: 30, name: "Обєкт", execute: "{}", example: `Змінна учень = Обєкт;
	  
	  учень.імя = 'Оля';
	  учень.вік = 10;
	  
	  Друк('Ключі: ' + Ключі(учень));
	  Друк('Значення: ' + Значення(учень));
	  Друк('Пари: ' + Пари(учень));
	  
	  Змінна дані = Обєкт;
	  
	  дані.місто = 'Київ';
	  
	  Якщо ('місто' ЄКлюч дані) {
		Друк('Місто знайдено: ' + дані.місто);
	  }
	  
	  Видалити дані.місто;
	  
	  Друк('Після видалення: ' + дані);` },
		{
			id: 31, name: "Ключі", execute: "Object.keys", example: `Змінна учень = Обєкт;
	  
	  учень.імя = 'Оля';
	  учень.вік = 10;
	  
	  Друк('Ключі: ' + Ключі(учень));
	  Друк('Значення: ' + Значення(учень));
	  Друк('Пари: ' + Пари(учень));` },
		{
			id: 32, name: "Значення", execute: "Object.values", example: `Змінна учень = Обєкт;
	  
	  учень.імя = 'Оля';
	  учень.вік = 10;
	  
	  Друк('Ключі: ' + Ключі(учень));
	  Друк('Значення: ' + Значення(учень));
	  Друк('Пари: ' + Пари(учень));` },
		{
			id: 33, name: "Пари", execute: "Object.entries", example: `Змінна учень = Обєкт;
	  
	  учень.імя = 'Оля';
	  учень.вік = 10;
	  
	  Друк('Ключі: ' + Ключі(учень));
	  Друк('Значення: ' + Значення(учень));
	  Друк('Пари: ' + Пари(учень));` },
		{
			id: 34, name: "ЄКлюч", execute: "in", example: `Змінна дані = Обєкт;
	  
	  дані.місто = 'Київ';
	  
	  Якщо ('місто' ЄКлюч дані) {
		Друк('Місто знайдено: ' + дані.місто);
	  }
	  
	  Видалити дані.місто;
	  
	  Друк('Після видалення: ' + дані);` },
		{
			id: 35, name: "Видалити", execute: "delete", example: `Змінна дані = Обєкт;
	  
	  дані.місто = 'Київ';
	  
	  Якщо ('місто' ЄКлюч дані) {
		Друк('Місто знайдено: ' + дані.місто);
	  }
	  
	  Видалити дані.місто;
	  
	  Друк('Після видалення: ' + дані);` }
	];
}
